spring.application.name=transfer

#web
server.port=0

# datasource
spring.datasource.url=jdbc:postgresql://localhost:5432/transferdb
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=transferuser
spring.datasource.password=transferpass

# JPA
spring.jpa.properties.hibernate.implicit_naming_strategy=component-path
spring.jpa.properties.hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.properties.hibernate.hbm2ddl.auto=validate
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.create_empty_composites.enabled=true

# messaging
spring.kafka.bootstrap-servers = localhost:9092
spring.kafka.properties.spring.json.trusted.packages = *

spring.kafka.consumer.group-id=transfer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer


spring.kafka.producer.key-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# service discovery
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
